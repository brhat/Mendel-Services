FROM ubuntu:bionic

# hints related to apt and multiple architectures:
# https://stackoverflow.com/questions/37706635/in-docker-apt-get-install-fails-with-failed-to-fetch-http-archive-ubuntu-com
# https://wiki.ubuntuusers.de/sources.list/
# https://wiki.debian.org/QemuUserEmulation
# https://wiki.debian.org/Multiarch/HOWTO

RUN mv /etc/apt/sources.list /etc/apt/sources.list.old

RUN printf \
"deb [arch=amd64,i386] http://de.archive.ubuntu.com/ubuntu bionic main restricted universe multiverse\n\
deb [arch=amd64,i386] http://de.archive.ubuntu.com/ubuntu bionic-updates main restricted universe multiverse\n\
deb [arch=amd64,i386] http://de.archive.ubuntu.com/ubuntu bionic-security main restricted universe multiverse\n\
deb [arch=amd64,i386] http://de.archive.ubuntu.com/ubuntu bionic-backports main restricted universe multiverse\n\
deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports/ bionic main universe restricted multiverse\n\
deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports/ bionic-security main universe restricted multiverse\n\
deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main universe restricted multiverse\n\
deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports/ bionic-backports main universe restricted multiverse\n"\
> /etc/apt/sources.list


RUN apt-get update && apt-get install -y git
RUN dpkg --add-architecture i386 && dpkg --add-architecture armhf && apt-get update
RUN apt-get install -y build-essential gcc-multilib mingw-w64 wine64 wine32 qemu binfmt-support qemu-user-static
RUN apt-get install -y crossbuild-essential-armhf libc6:armhf
# buildbot and docker:
RUN apt install -y \
   python-dev \
   python-pip
RUN pip install buildbot-worker
RUN groupadd -r buildbot && useradd -r -g buildbot buildbot
RUN mkdir /worker && chown buildbot:buildbot /worker
# Install your build-dependencies here ...
USER buildbot
WORKDIR /worker
ENTRYPOINT buildbot-worker create-worker . $BUILDMASTER $MULTIARCH_NAME $MULTIARCH_PASS && unset BUILDMASTER MULTIARCH_NAME MULTIARCH_PASS BUILDMASTER_PORT && buildbot-worker start --nodaemon
